// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.2
// source: fleetspeak/src/server/proto/fleetspeak_server/admin.proto

package fleetspeak_server

import (
	fleetspeak "fleetspeak/src/common/proto/fleetspeak"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetMetricValuesRequest_Endpoint int32

const (
	GetMetricValuesRequest_GET         GetMetricValuesRequest_Endpoint = 0
	GetMetricValuesRequest_POST_SEARCH GetMetricValuesRequest_Endpoint = 1
	GetMetricValuesRequest_POST_QUERY  GetMetricValuesRequest_Endpoint = 2 // POST-ANNOTATIONS = 3;
)

// Enum value maps for GetMetricValuesRequest_Endpoint.
var (
	GetMetricValuesRequest_Endpoint_name = map[int32]string{
		0: "GET",
		1: "POST_SEARCH",
		2: "POST_QUERY",
	}
	GetMetricValuesRequest_Endpoint_value = map[string]int32{
		"GET":         0,
		"POST_SEARCH": 1,
		"POST_QUERY":  2,
	}
)

func (x GetMetricValuesRequest_Endpoint) Enum() *GetMetricValuesRequest_Endpoint {
	p := new(GetMetricValuesRequest_Endpoint)
	*p = x
	return p
}

func (x GetMetricValuesRequest_Endpoint) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetMetricValuesRequest_Endpoint) Descriptor() protoreflect.EnumDescriptor {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_enumTypes[0].Descriptor()
}

func (GetMetricValuesRequest_Endpoint) Type() protoreflect.EnumType {
	return &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_enumTypes[0]
}

func (x GetMetricValuesRequest_Endpoint) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetMetricValuesRequest_Endpoint.Descriptor instead.
func (GetMetricValuesRequest_Endpoint) EnumDescriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{14, 0}
}

type CreateBroadcastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Broadcast *Broadcast `protobuf:"bytes,1,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	Limit     uint64     `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *CreateBroadcastRequest) Reset() {
	*x = CreateBroadcastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBroadcastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBroadcastRequest) ProtoMessage() {}

func (x *CreateBroadcastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBroadcastRequest.ProtoReflect.Descriptor instead.
func (*CreateBroadcastRequest) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{0}
}

func (x *CreateBroadcastRequest) GetBroadcast() *Broadcast {
	if x != nil {
		return x.Broadcast
	}
	return nil
}

func (x *CreateBroadcastRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListActiveBroadcastsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If set, only return broadcasts with the given service_name.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
}

func (x *ListActiveBroadcastsRequest) Reset() {
	*x = ListActiveBroadcastsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActiveBroadcastsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveBroadcastsRequest) ProtoMessage() {}

func (x *ListActiveBroadcastsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveBroadcastsRequest.ProtoReflect.Descriptor instead.
func (*ListActiveBroadcastsRequest) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{1}
}

func (x *ListActiveBroadcastsRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type ListActiveBroadcastsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Broadcasts []*Broadcast `protobuf:"bytes,1,rep,name=broadcasts,proto3" json:"broadcasts,omitempty"`
}

func (x *ListActiveBroadcastsResponse) Reset() {
	*x = ListActiveBroadcastsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActiveBroadcastsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveBroadcastsResponse) ProtoMessage() {}

func (x *ListActiveBroadcastsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveBroadcastsResponse.ProtoReflect.Descriptor instead.
func (*ListActiveBroadcastsResponse) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{2}
}

func (x *ListActiveBroadcastsResponse) GetBroadcasts() []*Broadcast {
	if x != nil {
		return x.Broadcasts
	}
	return nil
}

type ListClientsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If non-empty, restricts results to the listed client_ids. If empty, all
	// clients known to the system will be listed.
	ClientIds [][]byte `protobuf:"bytes,1,rep,name=client_ids,json=clientIds,proto3" json:"client_ids,omitempty"`
}

func (x *ListClientsRequest) Reset() {
	*x = ListClientsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientsRequest) ProtoMessage() {}

func (x *ListClientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientsRequest.ProtoReflect.Descriptor instead.
func (*ListClientsRequest) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{3}
}

func (x *ListClientsRequest) GetClientIds() [][]byte {
	if x != nil {
		return x.ClientIds
	}
	return nil
}

type ListClientsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clients []*Client `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
}

func (x *ListClientsResponse) Reset() {
	*x = ListClientsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientsResponse) ProtoMessage() {}

func (x *ListClientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientsResponse.ProtoReflect.Descriptor instead.
func (*ListClientsResponse) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{4}
}

func (x *ListClientsResponse) GetClients() []*Client {
	if x != nil {
		return x.Clients
	}
	return nil
}

type Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId               []byte               `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Labels                 []*fleetspeak.Label  `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
	LastContactTime        *timestamp.Timestamp `protobuf:"bytes,3,opt,name=last_contact_time,json=lastContactTime,proto3" json:"last_contact_time,omitempty"`
	LastContactAddress     string               `protobuf:"bytes,4,opt,name=last_contact_address,json=lastContactAddress,proto3" json:"last_contact_address,omitempty"`
	LastContactStreamingTo string               `protobuf:"bytes,7,opt,name=last_contact_streaming_to,json=lastContactStreamingTo,proto3" json:"last_contact_streaming_to,omitempty"`
	LastClock              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_clock,json=lastClock,proto3" json:"last_clock,omitempty"`
	Blacklisted            bool                 `protobuf:"varint,6,opt,name=blacklisted,proto3" json:"blacklisted,omitempty"`
}

func (x *Client) Reset() {
	*x = Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{5}
}

func (x *Client) GetClientId() []byte {
	if x != nil {
		return x.ClientId
	}
	return nil
}

func (x *Client) GetLabels() []*fleetspeak.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Client) GetLastContactTime() *timestamp.Timestamp {
	if x != nil {
		return x.LastContactTime
	}
	return nil
}

func (x *Client) GetLastContactAddress() string {
	if x != nil {
		return x.LastContactAddress
	}
	return ""
}

func (x *Client) GetLastContactStreamingTo() string {
	if x != nil {
		return x.LastContactStreamingTo
	}
	return ""
}

func (x *Client) GetLastClock() *timestamp.Timestamp {
	if x != nil {
		return x.LastClock
	}
	return nil
}

func (x *Client) GetBlacklisted() bool {
	if x != nil {
		return x.Blacklisted
	}
	return false
}

type GetMessageStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId []byte `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *GetMessageStatusRequest) Reset() {
	*x = GetMessageStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageStatusRequest) ProtoMessage() {}

func (x *GetMessageStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageStatusRequest.ProtoReflect.Descriptor instead.
func (*GetMessageStatusRequest) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{6}
}

func (x *GetMessageStatusRequest) GetMessageId() []byte {
	if x != nil {
		return x.MessageId
	}
	return nil
}

type DeletePendingMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientIds [][]byte `protobuf:"bytes,1,rep,name=client_ids,json=clientIds,proto3" json:"client_ids,omitempty"`
}

func (x *DeletePendingMessagesRequest) Reset() {
	*x = DeletePendingMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePendingMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePendingMessagesRequest) ProtoMessage() {}

func (x *DeletePendingMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePendingMessagesRequest.ProtoReflect.Descriptor instead.
func (*DeletePendingMessagesRequest) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{7}
}

func (x *DeletePendingMessagesRequest) GetClientIds() [][]byte {
	if x != nil {
		return x.ClientIds
	}
	return nil
}

type GetMessageStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreationTime *timestamp.Timestamp      `protobuf:"bytes,1,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	Result       *fleetspeak.MessageResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetMessageStatusResponse) Reset() {
	*x = GetMessageStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageStatusResponse) ProtoMessage() {}

func (x *GetMessageStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageStatusResponse.ProtoReflect.Descriptor instead.
func (*GetMessageStatusResponse) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{8}
}

func (x *GetMessageStatusResponse) GetCreationTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreationTime
	}
	return nil
}

func (x *GetMessageStatusResponse) GetResult() *fleetspeak.MessageResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type StoreFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	FileName    string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Data        []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StoreFileRequest) Reset() {
	*x = StoreFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreFileRequest) ProtoMessage() {}

func (x *StoreFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreFileRequest.ProtoReflect.Descriptor instead.
func (*StoreFileRequest) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{9}
}

func (x *StoreFileRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *StoreFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *StoreFileRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListClientContactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId []byte `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *ListClientContactsRequest) Reset() {
	*x = ListClientContactsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClientContactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientContactsRequest) ProtoMessage() {}

func (x *ListClientContactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientContactsRequest.ProtoReflect.Descriptor instead.
func (*ListClientContactsRequest) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{10}
}

func (x *ListClientContactsRequest) GetClientId() []byte {
	if x != nil {
		return x.ClientId
	}
	return nil
}

type ListClientContactsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contacts []*ClientContact `protobuf:"bytes,1,rep,name=contacts,proto3" json:"contacts,omitempty"`
}

func (x *ListClientContactsResponse) Reset() {
	*x = ListClientContactsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClientContactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientContactsResponse) ProtoMessage() {}

func (x *ListClientContactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientContactsResponse.ProtoReflect.Descriptor instead.
func (*ListClientContactsResponse) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{11}
}

func (x *ListClientContactsResponse) GetContacts() []*ClientContact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type ClientContact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SentNonce       uint64               `protobuf:"fixed64,1,opt,name=sent_nonce,json=sentNonce,proto3" json:"sent_nonce,omitempty"`
	ReceivedNonce   uint64               `protobuf:"fixed64,2,opt,name=received_nonce,json=receivedNonce,proto3" json:"received_nonce,omitempty"`
	ObservedAddress string               `protobuf:"bytes,3,opt,name=observed_address,json=observedAddress,proto3" json:"observed_address,omitempty"`
	Timestamp       *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ClientContact) Reset() {
	*x = ClientContact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientContact) ProtoMessage() {}

func (x *ClientContact) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientContact.ProtoReflect.Descriptor instead.
func (*ClientContact) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{12}
}

func (x *ClientContact) GetSentNonce() uint64 {
	if x != nil {
		return x.SentNonce
	}
	return 0
}

func (x *ClientContact) GetReceivedNonce() uint64 {
	if x != nil {
		return x.ReceivedNonce
	}
	return 0
}

func (x *ClientContact) GetObservedAddress() string {
	if x != nil {
		return x.ObservedAddress
	}
	return ""
}

func (x *ClientContact) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type BlacklistClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId []byte `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *BlacklistClientRequest) Reset() {
	*x = BlacklistClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlacklistClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlacklistClientRequest) ProtoMessage() {}

func (x *BlacklistClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlacklistClientRequest.ProtoReflect.Descriptor instead.
func (*BlacklistClientRequest) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{13}
}

func (x *BlacklistClientRequest) GetClientId() []byte {
	if x != nil {
		return x.ClientId
	}
	return nil
}

// TODO add support for Grafana annotations
type GetMetricValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint GetMetricValuesRequest_Endpoint `protobuf:"varint,1,opt,name=endpoint,proto3,enum=fleetspeak.server.GetMetricValuesRequest_Endpoint" json:"endpoint,omitempty"`
	Target   string                          `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Type     string                          `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *GetMetricValuesRequest) Reset() {
	*x = GetMetricValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricValuesRequest) ProtoMessage() {}

func (x *GetMetricValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricValuesRequest.ProtoReflect.Descriptor instead.
func (*GetMetricValuesRequest) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{14}
}

func (x *GetMetricValuesRequest) GetEndpoint() GetMetricValuesRequest_Endpoint {
	if x != nil {
		return x.Endpoint
	}
	return GetMetricValuesRequest_GET
}

func (x *GetMetricValuesRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *GetMetricValuesRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// TODO add support for Grafana annotations
type GetMetricValuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets    []string  `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	Datapoints []float64 `protobuf:"fixed64,2,rep,packed,name=datapoints,proto3" json:"datapoints,omitempty"`
}

func (x *GetMetricValuesResponse) Reset() {
	*x = GetMetricValuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricValuesResponse) ProtoMessage() {}

func (x *GetMetricValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricValuesResponse.ProtoReflect.Descriptor instead.
func (*GetMetricValuesResponse) Descriptor() ([]byte, []int) {
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP(), []int{15}
}

func (x *GetMetricValuesResponse) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *GetMetricValuesResponse) GetDatapoints() []float64 {
	if x != nil {
		return x.Datapoints
	}
	return nil
}

var File_fleetspeak_src_server_proto_fleetspeak_server_admin_proto protoreflect.FileDescriptor

var file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDesc = []byte{
	0x0a, 0x39, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2f, 0x73, 0x72, 0x63,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x6c,
	0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x66, 0x6c, 0x65,
	0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x33, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2f, 0x73, 0x72, 0x63, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x6c, 0x65,
	0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b,
	0x2f, 0x73, 0x72, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a,
	0x0a, 0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52,
	0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x40, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70,
	0x65, 0x61, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x52, 0x0a, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73,
	0x22, 0x33, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x4a, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0xe2, 0x02, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x6c, 0x65, 0x65,
	0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6c, 0x61, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x39,
	0x0a, 0x19, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x43,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x62, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x22, 0x38, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x22, 0x3d, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22,
	0x8e, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x66, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x38, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x5a, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0xba,
	0x01, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x35, 0x0a, 0x16, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x32, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x34, 0x0a, 0x08, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x02, 0x22,
	0x53, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x32, 0x9f, 0x08, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x58,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x12, 0x29, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73,
	0x12, 0x2e, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x25, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x66, 0x6c, 0x65, 0x65,
	0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x66, 0x6c, 0x65, 0x65,
	0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73,
	0x70, 0x65, 0x61, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x2e, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74,
	0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x13, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74,
	0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x18, 0x2e,
	0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x2f, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a,
	0x09, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x18, 0x2e, 0x66, 0x6c, 0x65,
	0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x18, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61,
	0x6b, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00,
	0x12, 0x58, 0x0a, 0x0f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x29, 0x2e,
	0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74,
	0x73, 0x70, 0x65, 0x61, 0x6b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescOnce sync.Once
	file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescData = file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDesc
)

func file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescGZIP() []byte {
	file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescOnce.Do(func() {
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescData)
	})
	return file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDescData
}

var file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_goTypes = []interface{}{
	(GetMetricValuesRequest_Endpoint)(0), // 0: fleetspeak.server.GetMetricValuesRequest.Endpoint
	(*CreateBroadcastRequest)(nil),       // 1: fleetspeak.server.CreateBroadcastRequest
	(*ListActiveBroadcastsRequest)(nil),  // 2: fleetspeak.server.ListActiveBroadcastsRequest
	(*ListActiveBroadcastsResponse)(nil), // 3: fleetspeak.server.ListActiveBroadcastsResponse
	(*ListClientsRequest)(nil),           // 4: fleetspeak.server.ListClientsRequest
	(*ListClientsResponse)(nil),          // 5: fleetspeak.server.ListClientsResponse
	(*Client)(nil),                       // 6: fleetspeak.server.Client
	(*GetMessageStatusRequest)(nil),      // 7: fleetspeak.server.GetMessageStatusRequest
	(*DeletePendingMessagesRequest)(nil), // 8: fleetspeak.server.DeletePendingMessagesRequest
	(*GetMessageStatusResponse)(nil),     // 9: fleetspeak.server.GetMessageStatusResponse
	(*StoreFileRequest)(nil),             // 10: fleetspeak.server.StoreFileRequest
	(*ListClientContactsRequest)(nil),    // 11: fleetspeak.server.ListClientContactsRequest
	(*ListClientContactsResponse)(nil),   // 12: fleetspeak.server.ListClientContactsResponse
	(*ClientContact)(nil),                // 13: fleetspeak.server.ClientContact
	(*BlacklistClientRequest)(nil),       // 14: fleetspeak.server.BlacklistClientRequest
	(*GetMetricValuesRequest)(nil),       // 15: fleetspeak.server.GetMetricValuesRequest
	(*GetMetricValuesResponse)(nil),      // 16: fleetspeak.server.GetMetricValuesResponse
	(*Broadcast)(nil),                    // 17: fleetspeak.server.Broadcast
	(*fleetspeak.Label)(nil),             // 18: fleetspeak.Label
	(*timestamp.Timestamp)(nil),          // 19: google.protobuf.Timestamp
	(*fleetspeak.MessageResult)(nil),     // 20: fleetspeak.MessageResult
	(*fleetspeak.Message)(nil),           // 21: fleetspeak.Message
	(*fleetspeak.EmptyMessage)(nil),      // 22: fleetspeak.EmptyMessage
}
var file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_depIdxs = []int32{
	17, // 0: fleetspeak.server.CreateBroadcastRequest.broadcast:type_name -> fleetspeak.server.Broadcast
	17, // 1: fleetspeak.server.ListActiveBroadcastsResponse.broadcasts:type_name -> fleetspeak.server.Broadcast
	6,  // 2: fleetspeak.server.ListClientsResponse.clients:type_name -> fleetspeak.server.Client
	18, // 3: fleetspeak.server.Client.labels:type_name -> fleetspeak.Label
	19, // 4: fleetspeak.server.Client.last_contact_time:type_name -> google.protobuf.Timestamp
	19, // 5: fleetspeak.server.Client.last_clock:type_name -> google.protobuf.Timestamp
	19, // 6: fleetspeak.server.GetMessageStatusResponse.creation_time:type_name -> google.protobuf.Timestamp
	20, // 7: fleetspeak.server.GetMessageStatusResponse.result:type_name -> fleetspeak.MessageResult
	13, // 8: fleetspeak.server.ListClientContactsResponse.contacts:type_name -> fleetspeak.server.ClientContact
	19, // 9: fleetspeak.server.ClientContact.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 10: fleetspeak.server.GetMetricValuesRequest.endpoint:type_name -> fleetspeak.server.GetMetricValuesRequest.Endpoint
	1,  // 11: fleetspeak.server.Admin.CreateBroadcast:input_type -> fleetspeak.server.CreateBroadcastRequest
	2,  // 12: fleetspeak.server.Admin.ListActiveBroadcasts:input_type -> fleetspeak.server.ListActiveBroadcastsRequest
	4,  // 13: fleetspeak.server.Admin.ListClients:input_type -> fleetspeak.server.ListClientsRequest
	11, // 14: fleetspeak.server.Admin.ListClientContacts:input_type -> fleetspeak.server.ListClientContactsRequest
	7,  // 15: fleetspeak.server.Admin.GetMessageStatus:input_type -> fleetspeak.server.GetMessageStatusRequest
	21, // 16: fleetspeak.server.Admin.InsertMessage:input_type -> fleetspeak.Message
	8,  // 17: fleetspeak.server.Admin.DeletePendingMessages:input_type -> fleetspeak.server.DeletePendingMessagesRequest
	10, // 18: fleetspeak.server.Admin.StoreFile:input_type -> fleetspeak.server.StoreFileRequest
	22, // 19: fleetspeak.server.Admin.KeepAlive:input_type -> fleetspeak.EmptyMessage
	14, // 20: fleetspeak.server.Admin.BlacklistClient:input_type -> fleetspeak.server.BlacklistClientRequest
	15, // 21: fleetspeak.server.Admin.GetMetricValues:input_type -> fleetspeak.server.GetMetricValuesRequest
	22, // 22: fleetspeak.server.Admin.CreateBroadcast:output_type -> fleetspeak.EmptyMessage
	3,  // 23: fleetspeak.server.Admin.ListActiveBroadcasts:output_type -> fleetspeak.server.ListActiveBroadcastsResponse
	5,  // 24: fleetspeak.server.Admin.ListClients:output_type -> fleetspeak.server.ListClientsResponse
	12, // 25: fleetspeak.server.Admin.ListClientContacts:output_type -> fleetspeak.server.ListClientContactsResponse
	9,  // 26: fleetspeak.server.Admin.GetMessageStatus:output_type -> fleetspeak.server.GetMessageStatusResponse
	22, // 27: fleetspeak.server.Admin.InsertMessage:output_type -> fleetspeak.EmptyMessage
	22, // 28: fleetspeak.server.Admin.DeletePendingMessages:output_type -> fleetspeak.EmptyMessage
	22, // 29: fleetspeak.server.Admin.StoreFile:output_type -> fleetspeak.EmptyMessage
	22, // 30: fleetspeak.server.Admin.KeepAlive:output_type -> fleetspeak.EmptyMessage
	22, // 31: fleetspeak.server.Admin.BlacklistClient:output_type -> fleetspeak.EmptyMessage
	16, // 32: fleetspeak.server.Admin.GetMetricValues:output_type -> fleetspeak.server.GetMetricValuesResponse
	22, // [22:33] is the sub-list for method output_type
	11, // [11:22] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_init() }
func file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_init() {
	if File_fleetspeak_src_server_proto_fleetspeak_server_admin_proto != nil {
		return
	}
	file_fleetspeak_src_server_proto_fleetspeak_server_broadcasts_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBroadcastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActiveBroadcastsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActiveBroadcastsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClientsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClientsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePendingMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClientContactsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClientContactsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientContact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlacklistClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricValuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_goTypes,
		DependencyIndexes: file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_depIdxs,
		EnumInfos:         file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_enumTypes,
		MessageInfos:      file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_msgTypes,
	}.Build()
	File_fleetspeak_src_server_proto_fleetspeak_server_admin_proto = out.File
	file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_rawDesc = nil
	file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_goTypes = nil
	file_fleetspeak_src_server_proto_fleetspeak_server_admin_proto_depIdxs = nil
}
